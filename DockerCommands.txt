#check docker version -->
docker --version

#get running containers -->
docker ps

#get running + exited container -->
docker ps -a

#run container -->
docker run 

#run container in detached mode --> 
docker run -d 

#assign environment variables to container --> 
docker run -e 

#attahce volume -->
docker run -v <host_dir_path> <container_dir_path>

#inspect container --> 
docker inspect

#get conatiner logs --> 
docker logs <conatiner_name>

#host and container port mapping 
docker run -p 80:5000 <container_name>
80 ---> Host port
5000 --> conatiner port 


#stop the container 
docker stop <conatainer_name>


#create docker volume 
docker volume create <volume_name>

#attach created docker volume to container
docker run -v <volume>:var/lib/mysql mysql

docker run --mount type=bind, source=/data/mysql,target=var/lib/mysql mysql


#create a docker network
docker network create \
      --driver bridge \
      --subnet 182.18.0.0\16 custom-isolated-network

#list network 
docker network ls






#get docker images --> 
docker images 

#remove images
docker rm <image_id>


#########################################################

docker build .

#rename image and add tag 
docker tag <image_id> grocery-backend:latest

#run your image

run -d -p 5000:500 --name <container_name> <images_name>
docker run -d -p 5000:5000 --name grocery-backend-container grocery-backend:latest

docker run -d \
  --name grocery-mongo \
  -p 27017:27017 \
  -e MONGO_INITDB_DATABASE=grocerydb \
  mongo

curl http://<your-ec2-public-ip>:5000


dockerise grocery app -->
docker file 
check package.json for dependencies 
create backend container
(in backend conatiner .env , give public IP of host where mongo container is 
running) 
create mongo container 


##################################################################

push image to docker hub 
docker login <username>

tag image 
docker tag grocery-backend:latest yourusername/grocery-backend:latest

push image 
docker push yourusername/grocery-backend:latest

#####

frontend container deployement 
errors --> 
2025-04-12T18:34:15: PM2 log: Launching in no daemon mode
2025-04-12T18:34:15: PM2 error: Script not found: /app/serve
2025-04-12T18:34:15: PM2 log: PM2 successfully stopped

solution instead of 
CMD ["pm2-runtime", "serve", "build", "3000", "--name", "grocery-frontend", "--spa"]
use 
CMD pm2 serve build 3000 --spa --name "grocery-frontend"